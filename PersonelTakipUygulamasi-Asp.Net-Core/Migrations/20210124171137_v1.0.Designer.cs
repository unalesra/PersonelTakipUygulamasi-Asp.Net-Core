// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonelTakipUygulamasi_Asp.Net_Core.Data;

namespace PersonelTakipUygulamasi_Asp.Net_Core.Migrations
{
    [DbContext(typeof(PersonelTakipDbContext))]
    [Migration("20210124171137_v1.0")]
    partial class v10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Duty", b =>
                {
                    b.Property<int>("DutyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Approval")
                        .HasColumnType("boolean");

                    b.Property<float>("ChangePerUnit")
                        .HasColumnType("real");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean");

                    b.Property<string>("DutyContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DutyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.HasKey("DutyId");

                    b.HasIndex("TaskId");

                    b.ToTable("Duties");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.EmployeeTasks", b =>
                {
                    b.Property<int>("EmployeeTasksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("TaskId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeTasksId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TaskId");

                    b.ToTable("EmployeeTasks");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.EmployeeTeam", b =>
                {
                    b.Property<int>("EmployeeTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeTeamId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.ToTable("EmployeeTeams");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("RoleName")
                        .HasColumnType("integer");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Approval")
                        .HasColumnType("boolean");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("TaskContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("teamId")
                        .HasColumnType("integer");

                    b.HasKey("TaskId");

                    b.HasIndex("teamId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("TeamLeaderId")
                        .HasColumnType("integer");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Duty", b =>
                {
                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Task", "Tasks")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Employee", b =>
                {
                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Role", "Role")
                        .WithOne("Employee")
                        .HasForeignKey("PersonelTakipUygulamasi_Asp.Net_Core.Models.Employee", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.EmployeeTasks", b =>
                {
                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Employee");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.EmployeeTeam", b =>
                {
                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Task", b =>
                {
                    b.HasOne("PersonelTakipUygulamasi_Asp.Net_Core.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("teamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PersonelTakipUygulamasi_Asp.Net_Core.Models.Role", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
